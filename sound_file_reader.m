clear all
close all

read_and_resample("test1.wav")

function output = read_and_resample(x)
    % Read and find sample rate of audio
    [audio,sample_rate] = audioread(x);
    
    % Stereo conversion to mono
    [num_samples,channels] = size(audio);
    
    if channels == 2
        audio_mono = sum(audio, 2) / size(audio, 2);
    else 
        audio_mono = audio;
    end
    
    % Play sound
    sound(audio_mono, sample_rate);
    pause(num_samples/sample_rate)
    
    % Write sound to new file - TODO: location/names
    filename = "new_sound.wav";
    audiowrite(filename, audio_mono, sample_rate);
    
    % Plot sound waveform as function of sample number
    orig_samples = (1:num_samples);
    
    figure(1)
    plot(orig_samples, audio_mono);
    xlabel("Sample Number");
    ylabel("Amplitude");
    
    savefig("original_sound_waveform.fig")
    
    % Resample input signal to 16kHz - TODO: lower than 16kHz case
    audio_resampled = resample(audio_mono, 16000, sample_rate);
    
    % Generate cosine signal with 1kHz oscillations and same time duration
    % as original audio
    fs = 16000; % Sampling frequency (samples per second) 
    F = 1000; % Cosine wave frequency (hertz) 
    
    dt = 1/fs;
    
    % Original time (~6s)
    time_duration = size(audio_resampled,1)/fs;
    tt = 0:dt:time_duration;
    
    cos_signal_sound = cos(2*pi*F*tt);
    
    % Play sound generated by cosine signal
    sound(cos_signal_sound, fs)
    
    % Plot two cycles of cosine sound signal waveform w.r.t time
    T = 2/F;
    
    tt_plot = 0:dt:T;
    cos_signal_plot = cos(2*pi*F*tt_plot);
        
    figure(2)
    plot(tt_plot,cos_signal_plot);
    xlabel("Time")
    ylabel("Amplitude");
    
    savefig("cosine_sound_signal_waveform.fig")
end